name: validate delta changes in PR
on:
  pull_request:
    branches:
      - QA
jobs:
  SFDX-CLI-Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: echo "🐧 GitHub Action running on ${{ runner.os }}"
      - run: echo "🔎 Retrieving Dev Branch from ${{ github.repository }}."
      - uses: actions/checkout@v4
        with:
          ref: QA
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sf --help
          pip install xq
          pip install yq

      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SF_AUTH_URL }}" > sfdx-auth-url.txt
          sfdx auth:sfdxurl:store --sfdx-url-file sfdx-auth-url.txt
     
      - name: Debug Test Classes File
        run: cat test-classes.txt
      
      - name: Check if Test Classes File Exists
        run: |
          if [ ! -s test-classes.txt ]; then
            echo "test-classes.txt is missing or empty. Exiting."
            exit 1
          fi
      
      - name: Read Test Class Names from File
        id: read-test-classes
        run: |
          TEST_CLASSES=$(cat test-classes.txt | tr '\n' ',' | sed 's/,$//')
          if [ -z "$TEST_CLASSES" ]; then
            echo "TEST_CLASSES=" >> $GITHUB_ENV
            echo "RUN_TESTS=false" >> $GITHUB_ENV
          else
            echo "TEST_CLASSES=$TEST_CLASSES" >> $GITHUB_ENV
            echo "RUN_TESTS=true" >> $GITHUB_ENV
          fi
          
      - name: Install sfdxGitDelta
        run: |
          echo y | sf plugins install sfdx-git-delta
      
      - name: Generate Delta between QA and PR Branch
        run: |
          sf sgd source delta --to "HEAD" --from "origin/QA" --output "." --ignore .github/workflows/ignore.txt
          cat package/package.xml  # Output the generated package.xml for debugging
          
      - name: Debug Environment Variables
        run: |
          echo "TEST_CLASSES=${{ env.TEST_CLASSES }}"
          echo "RUN_TESTS=${{ env.RUN_TESTS }}"
      
      # Validate with specified tests if RUN_TESTS is true
      - name: Validate Delta Components with Specified Tests
        if: ${{ env.RUN_TESTS == 'true' }}
        run: >
          echo "Running specified tests: ${{ env.TEST_CLASSES }}"
          sf project deploy validate --manifest package/package.xml --test-level RunSpecifiedTests --tests ${{ env.TEST_CLASSES }} --target-org jp@sunsolutions.com
      
      # Validate package without tests if RUN_TESTS is false
      - name: Validate Delta Components without Tests
        if: ${{ env.RUN_TESTS == 'false' }}
        run: >
          echo "No test classes found. Validating package without running tests."
          sf project deploy validate --manifest package/package.xml --test-level NoTestRun --target-org jp@sunsolutions.com
