name: PR Validation for Salesforce Metadata

on:
  pull_request:
    branches:
      - QA

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure full history is fetched

      - name: Set up Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1
        with:
          version: latest

      - name: Authenticate to Salesforce
        run: |
          echo ${{ secrets.SF_AUTH_URL }} > sfdx-auth-url.txt
          sfdx auth:sfdxurl:store --sfdx-url-file sfdx-auth-url.txt

      - name: Get List of Changed Files
        id: get-changed-files
        run: |
          # Compare the current branch with the base branch (QA) to get a list of changed files
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Validate Only Changed Salesforce Files
        run: |
          for file in ${{ env.CHANGED_FILES }}; do
            if [[ $file == force-app/main/default/* ]]; then
              echo "Validating Salesforce file: $file"
              sfdx force:source:deploy --checkonly --sourcepath $file --target-org ${{ secrets.SF_AUTH_URL }} --testlevel NoTestRun
            else
              echo "Skipping non-Salesforce file: $file"
            fi
          done
        shell: bash

      - name: Generate Test Classes File
        run: |
          # Generate test-classes.txt by extracting class names from changed Apex files
          echo "${{ env.CHANGED_FILES }}" | tr ' ' '\n' | grep 'force-app/main/default/classes/' | sed 's/.*\///;s/.cls//' > test-classes.txt
          
      - name: Debug Test Classes File
        run: cat test-classes.txt

      - name: Read Test Class Names from File
        id: read-test-classes
        run: |
          TEST_CLASSES=$(cat test-classes.txt | tr '\n' ',' | sed 's/,$//')
          if [ -z "$TEST_CLASSES" ]; then
            echo "TEST_CLASSES=" >> $GITHUB_ENV
            echo "RUN_TESTS=false" >> $GITHUB_ENV
          else
            echo "TEST_CLASSES=$TEST_CLASSES" >> $GITHUB_ENV
            echo "RUN_TESTS=true" >> $GITHUB_ENV
          fi

      - name: Run Specific Apex Tests
        if: env.RUN_TESTS == 'true'
        run: |
          sfdx force:apex:test:run -n ${{ env.TEST_CLASSES }} -r human -u jp@sunsolutions.com

      - name: Validate Metadata
        run: |
          if [ "${{ env.RUN_TESTS }}" == "true" ]; then
            sfdx force:source:deploy --checkonly --sourcepath force-app/main/default --target-org jp@sunsolutions.com --testlevel RunSpecifiedTests --runtests "${{ env.TEST_CLASSES }}"
          else
            sfdx force:source:deploy --checkonly --sourcepath force-app/main/default --target-org jp@sunsolutions.com --testlevel NoTestRun
          fi
